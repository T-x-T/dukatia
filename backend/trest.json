{
	"configs": [
		{
			"name": "backend",
			"description": "tests for the rest api of the backend",
			"setup": {
				"cmd": "docker-compose -f trest.docker-compose.yml build && docker-compose -f trest.docker-compose.yml up -d",
				"finished_condition": {
					"endpoint_reachable": "/api/v1"
				}
			},
			"cleanup": {
				"cmd": "docker-compose -f trest.docker-compose.yml down && rm latest"
			},
			"api_hostname": "http://localhost:4000"
		}
	],
	"tasks": {
		"login_as_admin": {
			"endpoint": "/api/v1/login",
			"method": "POST",
			"body": {
				"name": "admin",
				"secret": "changeme"
			}
		}
	},
	"tests": [
		{
			"name": "currency",
			"defaults": {
				"cookies": {
					"accessToken": "$login_as_admin.accessToken"
				},
				"before": [
					"login_as_admin"
				]
			},
			"tests": [
				{
					"name": "retrieval of all currencies works",
					"endpoint": "/api/v1/currencies/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"name":"Euro","minor_in_mayor":100,"symbol":"€"},{"id":1,"name":"USD","minor_in_mayor":100,"symbol":"$"}]
					}
				},
				{
					"name": "post of new currency returns 200",
					"endpoint": "/api/v1/currencies",
					"method": "POST",
					"body": {
						"name": "test",
						"minor_in_mayor": 100,
						"symbol": "*"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "get single currency by id works",
					"endpoint": "/api/v1/currencies/1",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":1,"name":"USD","minor_in_mayor":100,"symbol":"$"}
					}
				},
				{
					"name": "attempting to get single currency with non existant id returns 404",
					"endpoint": "/api/v1/currencies/5",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 404,
						"body_equals": {"error":"specified item of type currency not found with filter id=5"}
					}
				},
				{
					"name": "new currency created correctly",
					"endpoint": "/api/v1/currencies/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"name":"Euro","minor_in_mayor":100,"symbol":"€"},{"id":1,"name":"USD","minor_in_mayor":100,"symbol":"$"},{"id":2,"name":"test","minor_in_mayor":100,"symbol":"*"}]
					}
				},
				{
					"name": "updating details of currency returns 200",
					"endpoint": "/api/v1/currencies/2",
					"method": "PUT",
					"body": {
						"name":"edited test",
						"minor_in_mayor": 12,
						"symbol": "/"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "updated currency details saved correctly",
					"endpoint": "/api/v1/currencies/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"name":"Euro","minor_in_mayor":100,"symbol":"€"},{"id":1,"name":"USD","minor_in_mayor":100,"symbol":"$"},{"id":2,"name":"edited test","minor_in_mayor":12,"symbol":"/"}]
					}
				}
			]
		},
		{
			"name": "recipients",
			"defaults": {
				"cookies": {
					"accessToken": "$login_as_admin.accessToken"
				},
				"before": [
					"login_as_admin"
				]
			},
			"tests": [
				{
					"name": "retrieval of all recipients works",
					"endpoint": "/api/v1/recipients/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"name":"Default","user_id":null,"tag_ids":[]}]
					}
				},
				{
					"name": "post of new recipient returns 200",
					"endpoint": "/api/v1/recipients",
					"method": "POST",
					"body": {
						"name": "test"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "new recipient created correctly",
					"endpoint": "/api/v1/recipients/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"name":"Default","user_id":null,"tag_ids":[]}, {"id":1,"name":"test","user_id":0,"tag_ids":[]}]
					}
				},
				{
					"name": "get single recipient by id works",
					"endpoint": "/api/v1/recipients/1",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":1,"name":"test","user_id":0,"tag_ids":[]}
					}
				},
				{
					"name": "attempting to get single recipient with non existant id returns 404",
					"endpoint": "/api/v1/recipients/5",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 404,
						"body_equals": {"error":"specified item of type recipient not found with filter id=5"}
					}
				},
				{
					"name": "updating name of recipient returns 200",
					"endpoint": "/api/v1/recipients/1",
					"method": "PUT",
					"body": {
						"name":"edited test"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "updated recipient name saved correctly",
					"endpoint": "/api/v1/recipients/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"name":"Default","user_id":null,"tag_ids":[]}, {"id":1,"name":"edited test","user_id":0,"tag_ids":[]}]
					}
				}
			]
		},
		{
			"name": "accounts",
			"defaults": {
				"cookies": {
					"accessToken": "$login_as_admin.accessToken"
				},
				"before": [
					"login_as_admin"
				]
			},
			"tests": [
				{
					"name": "retrieval of all accounts works",
					"endpoint": "/api/v1/accounts/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"name":"Default","default_currency_id":0,"user_id":0,"tag_ids":[]}]
					}
				},
				{
					"name": "post of new account returns 200",
					"endpoint": "/api/v1/accounts",
					"method": "POST",
					"body": {
						"name": "test",
						"default_currency_id": 0
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "new account created correctly",
					"endpoint": "/api/v1/accounts/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"name":"Default","default_currency_id":0,"user_id":0,"tag_ids":[]},{"id":1,"name":"test","default_currency_id":0,"user_id":0,"tag_ids":[]}]
					}
				},
				{
					"name": "get single account by id works",
					"endpoint": "/api/v1/accounts/1",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":1,"name":"test","default_currency_id":0,"user_id":0,"tag_ids":[]}
					}
				},
				{
					"name": "attempting to get single account with non existant id returns 404",
					"endpoint": "/api/v1/accounts/2",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 404,
						"body_equals": {"error":"specified item of type account not found with filter id=2"}
					}
				},
				{
					"name": "updating details of account returns 200",
					"endpoint": "/api/v1/accounts/1",
					"method": "PUT",
					"body": {
						"name":"edited test",
						"default_currency_id": 1
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "updated account name saved correctly",
					"endpoint": "/api/v1/accounts/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"name":"Default","default_currency_id":0,"user_id":0,"tag_ids":[]},{"id":1,"name":"edited test","default_currency_id":1,"user_id":0,"tag_ids":[]}]
					}
				}
			]
		},
		{
			"name": "tags",
			"defaults": {
				"cookies": {
					"accessToken": "$login_as_admin.accessToken"
				},
				"before": [
					"login_as_admin"
				]
			},
			"tests": [
				{
					"name": "retrieval of all tags works with no tags in the database",
					"endpoint": "/api/v1/tags/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": []
					}
				},
				{
					"name": "post of new tag returns 200",
					"endpoint": "/api/v1/tags",
					"method": "POST",
					"body": {
						"name": "test"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "new tag created correctly",
					"endpoint": "/api/v1/tags/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"name":"test","user_id":0,"parent_id":null}]
					}
				},
				{
					"name": "get single tag by id works",
					"endpoint": "/api/v1/tags/0",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":0,"name":"test","user_id":0,"parent_id":null}
					}
				},
				{
					"name": "attempting to get single tag with non existant id returns 404",
					"endpoint": "/api/v1/tags/5",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 404,
						"body_equals": {"error":"specified item of type tag not found with filter id=5"}
					}
				},
				{
					"name": "updating details of tag returns 200",
					"endpoint": "/api/v1/tags/0",
					"method": "PUT",
					"body": {
						"name":"edited test"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "updated tag name saved correctly",
					"endpoint": "/api/v1/tags/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"name":"edited test","user_id":0,"parent_id":null}]
					}
				},
				{
					"name": "deleting tag returns 200",
					"endpoint": "/api/v1/tags/0",
					"method": "DELETE",
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "deleted tag doesnt get returned by get all anymore",
					"endpoint": "/api/v1/tags/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": []
					}
				},
				{
					"name": "post of another tag returns 200",
					"endpoint": "/api/v1/tags",
					"method": "POST",
					"body": {
						"name": "test"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "second tag gets ID 1, even though tag with ID 0 got deleted",
					"endpoint": "/api/v1/tags/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":1,"name":"test","user_id":0,"parent_id":null}]
					}
				},
				{
					"name": "post of third tag returns 200",
					"endpoint": "/api/v1/tags",
					"method": "POST",
					"body": {
						"name": "test"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "updating parent of tag returns 200",
					"endpoint": "/api/v1/tags/1",
					"method": "PUT",
					"body": {
						"name":"edited test",
						"parent_id": 2
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "updated tag parent_id saved correctly",
					"endpoint": "/api/v1/tags/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":2,"name":"test","user_id":0,"parent_id":null},{"id":1,"name":"edited test","user_id":0,"parent_id":2}]
					}
				},
				{
					"name": "creating cyclic parent relationship fails",
					"endpoint": "/api/v1/tags/2",
					"method": "PUT",
					"body": {
						"name":"edited test",
						"parent_id": 1
					},
					"expected_outcome": {
						"status_code_equals": 400,
						"body_equals": {"error": "the given item is invalid, because parent doesn't exist or would create a cyclic relationship"}
					}
				},
				{
					"name": "deleting tag thats used as a parent returns 200",
					"endpoint": "/api/v1/tags/2",
					"method": "DELETE",
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "tag whose parent got deleted now has null as parent_id",
					"endpoint": "/api/v1/tags/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":1,"name":"edited test","user_id":0,"parent_id":null}]
					}
				},
				{
					"name": "creating tag with non existant parent fails",
					"endpoint": "/api/v1/tags",
					"method": "POST",
					"body": {
						"name":"edited test",
						"parent_id": 420
					},
					"expected_outcome": {
						"status_code_equals": 400,
						"body_equals": {"error": "the given item is invalid, because parent doesn't exist or would create a cyclic relationship"}
					}
				},
				{
					"name": "updating tag with non existant parent fails",
					"endpoint": "/api/v1/tags/2",
					"method": "PUT",
					"body": {
						"name":"edited test",
						"parent_id": 420
					},
					"expected_outcome": {
						"status_code_equals": 400,
						"body_equals": {"error": "the given item is invalid, because parent doesn't exist or would create a cyclic relationship"}
					}
				}
			]
		},
		{
			"name": "users",
			"tests": [
				{
					"name": "login with wrong secret doesnt work",
					"endpoint": "/api/v1/login",
					"method": "POST",
					"body": {
						"name": "admin",
						"secret": "wrong_password"
					},
					"expected_outcome": {
						"status_code_equals": 400,
						"body_equals": {"error":"the given credentials are invalid"}
					} 
				},
				{
					"name": "login with correct secret works",
					"endpoint": "/api/v1/login",
					"method": "POST",
					"body": {
						"name": "admin",
						"secret": "changeme"
					},
					"expected_outcome": {
						"status_code_equals": 200
					} 
				},
				{
					"name": "changing password returns 200",
					"endpoint": "/api/v1/users/me/secret",
					"method": "PUT",
					"cookies": {
						"accessToken": "$login_as_admin.accessToken"
					},
					"before": [
						"login_as_admin"
					],
					"body": {
						"old_secret": "changeme",
						"new_secret": "new_password"
					},
					"expected_outcome": {
						"status_code_equals": 200
					} 
				},
				{
					"name": "login with new secret works",
					"endpoint": "/api/v1/login",
					"method": "POST",
					"body": {
						"name": "admin",
						"secret": "new_password"
					},
					"expected_outcome": {
						"status_code_equals": 200
					} 
				},
				{
					"name": "login with old secret doesnt work",
					"endpoint": "/api/v1/login",
					"method": "POST",
					"body": {
						"name": "admin",
						"secret": "changeme"
					},
					"expected_outcome": {
						"status_code_equals": 400,
						"body_equals": {"error":"the given credentials are invalid"}
					} 
				}
			]
		},
		{
			"name": "transactions",
			"defaults": {
				"cookies": {
					"accessToken": "$login_as_admin.accessToken"
				},
				"before": [
					"login_as_admin"
				]
			},
			"tests": [
				{
					"name": "retrieval of all transactions works with none in the database",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": []
					}
				},
				{
					"name": "post of new transaction returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 0,
						"recipient_id": 0,
						"status": 1,
						"timestamp": "2023-03-25T11:22:00.000Z",
						"amount": 12345,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "new transaction created correctly",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[],"asset":null}]
					}
				},
				{
					"name": "get single transaction by id works",
					"endpoint": "/api/v1/transactions/0",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":0,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[],"asset":null}
					}
				},
				{
					"name": "attempting to get single transaction with non existant id returns 404",
					"endpoint": "/api/v1/transactions/5",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 404,
						"body_equals": {"error":"specified item of type transaction not found with filter id=5"}
					}
				},
				{
					"name": "updating details of transaction returns 200",
					"endpoint": "/api/v1/transactions/0",
					"method": "PUT",
					"body": {
						"account_id": 0,
						"recipient_id": 0,
						"status": 1,
						"timestamp": "2024-03-25T11:22:00.000Z",
						"amount": -12345,
						"comment": "this is an edited comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "updated transaction details saved correctly",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2024-03-25T11:22:00Z","amount":-12345,"comment":"this is an edited comment","tag_ids":[],"asset":null}]
					}
				},
				{
					"name": "post of second transaction returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 0,
						"recipient_id": 0,
						"status": 1,
						"timestamp": "2023-03-25T11:22:00.000Z",
						"amount": 12345,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "deleting transaction returns 200",
					"endpoint": "/api/v1/transactions/0",
					"method": "DELETE",
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "correct transaction got deleted",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":1,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[],"asset":null}]
					}
				},
				{
					"name": "post of transaction with non existant account_id returns 400",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 10,
						"recipient_id": 0,
						"status": 1,
						"timestamp": "2023-03-25T11:22:00.000Z",
						"amount": 12345,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 400,
						"body_equals": {"error":"specified item of type Account not found with filter account_id=10"}
					}
				},
				{
					"name": "post of transaction with non existant recipient_id returns 400",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 0,
						"recipient_id": 10,
						"status": 1,
						"timestamp": "2023-03-25T11:22:00.000Z",
						"amount": 12345,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 400
					}
				},
				{
					"name": "post of new tag returns 200",
					"endpoint": "/api/v1/tags",
					"method": "POST",
					"body": {
						"name": "tag1"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of second new tag returns 200",
					"endpoint": "/api/v1/tags",
					"method": "POST",
					"body": {
						"name": "tag2"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of transaction with tag 0 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 0,
						"recipient_id": 0,
						"status": 1,
						"tag_ids": [0],
						"timestamp": "2023-03-25T11:22:00.000Z",
						"amount": 12345,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "transaction with tag 0 got created correctly",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [
							{"id":1,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[],"asset":null},
							{"id":3,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[0],"asset":null}
						]
					}
				},
				{
					"name": "post of transaction with tag 1 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 0,
						"recipient_id": 0,
						"status": 1,
						"tag_ids": [1],
						"timestamp": "2023-03-25T11:22:00.000Z",
						"amount": 12345,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "transaction with tag 1 got created correctly",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [
							{"id":1,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[],"asset":null},
							{"id":3,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[0],"asset":null},
							{"id":4,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[1],"asset":null}
						]
					}
				},
				{
					"name": "post of transaction with tags 0 and 1 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 0,
						"recipient_id": 0,
						"status": 1,
						"tag_ids": [0, 1],
						"timestamp": "2023-03-25T11:22:00.000Z",
						"amount": 12345,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "transaction with tag 0 and 1 got created correctly",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [
							{"id":1,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[],"asset":null},
							{"id":3,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[0],"asset":null},
							{"id":4,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[1],"asset":null},
							{"id":5,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-25T11:22:00Z","amount":12345,"comment":"this is a comment","tag_ids":[0,1],"asset":null}
						]
					}
				}
			]
		},
		{
			"name": "assets",
			"defaults": {
				"cookies": {
					"accessToken": "$login_as_admin.accessToken"
				},
				"before": [
					"login_as_admin"
				]
			},
			"tests": [
				{
					"name": "retrieval of all assets works when none are created yet",
					"endpoint": "/api/v1/assets/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": []
					}
				},
				{
					"name": "post of new asset returns 200",
					"endpoint": "/api/v1/assets",
					"method": "POST",
					"body": {
						"name": "test",
						"description": "description",
						"currency_id": 0
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "new asset created correctly",
					"endpoint": "/api/v1/assets/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"user_id":0,"name":"test","description":"description","currency_id":0,"value_per_unit":0,"amount":0.0,"tag_ids":[]}]
					}
				},
				{
					"name": "get single asset by id works",
					"endpoint": "/api/v1/assets/0",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":0,"user_id":0,"name":"test","description":"description","currency_id":0,"value_per_unit":0,"amount":0.0,"tag_ids":[]}
					}
				},
				{
					"name": "attempting to get single asset with non existant id returns 404",
					"endpoint": "/api/v1/assets/2",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 404,
						"body_equals": {"error":"specified item of type asset not found with filter id=2"}
					}
				},
				{
					"name": "updating details of asset returns 200",
					"endpoint": "/api/v1/assets/0",
					"method": "PUT",
					"body": {
						"name":"edited test",
						"description": "edited description",
						"currency_id": 0
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "updated asset details saved correctly",
					"endpoint": "/api/v1/assets/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"user_id":0,"name":"edited test","description":"edited description","currency_id":0,"value_per_unit":0,"amount":0.0,"tag_ids":[]}]
					}
				},
				{
					"name": "post of second asset returns 200",
					"endpoint": "/api/v1/assets",
					"method": "POST",
					"body": {
						"name": "test2",
						"description": "description",
						"currency_id": 0
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "deleting asset returns 200",
					"endpoint": "/api/v1/assets/0",
					"method": "DELETE",
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "correct asset got deleted",
					"endpoint": "/api/v1/assets/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":0,"amount":0.0,"tag_ids":[]}]
					}
				},
				{
					"name": "post of valuation returns 200",
					"endpoint": "/api/v1/assets/1/valuations",
					"method": "POST",
					"body": {
						"value_per_unit": 123,
						"amount": 10,
						"timestamp": "2023-03-18T11:22:00Z"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "valuation got correctly saved",
					"endpoint": "/api/v1/assets/1/valuation_history",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"value_per_unit":123,"amount":10.0,"timestamp":"2023-03-18T11:22:00Z"}]
					}
				},
				{
					"name": "post of valuation with cost returns 200",
					"endpoint": "/api/v1/assets/1/valuations",
					"method": "POST",
					"body": {
						"value_per_unit": 123,
						"amount": 10,
						"timestamp": "2023-03-19T11:22:00Z",
						"cost": 100
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "valuation got correctly saved",
					"endpoint": "/api/v1/assets/1/valuation_history",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"value_per_unit":123,"amount":10.0,"timestamp":"2023-03-18T11:22:00Z"},{"value_per_unit":123,"amount":10.0,"timestamp":"2023-03-19T11:22:00Z"}]
					}
				},
				{
					"name": "no transactions created, because account_id wasnt specified",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": []
					}
				},
				{
					"name": "post of valuation with account_id returns 200",
					"endpoint": "/api/v1/assets/1/valuations",
					"method": "POST",
					"body": {
						"value_per_unit": 123,
						"amount": 20,
						"timestamp": "2023-03-20T11:22:00Z",
						"account_id": 0
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "transaction gets correctly created",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-20T11:22:00Z","amount":-1230,"comment":"Bought 10 units at 1.23€ each","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}}]
					}
				},
				{
					"name": "post of valuation with account_id and cost returns 200",
					"endpoint": "/api/v1/assets/1/valuations",
					"method": "POST",
					"body": {
						"value_per_unit": 123,
						"amount": 30,
						"timestamp": "2023-03-21T11:22:00Z",
						"account_id": 0,
						"cost": 100
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "transaction gets correctly created",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-20T11:22:00Z","amount":-1230,"comment":"Bought 10 units at 1.23€ each","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}},{"id":1,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-21T11:22:00Z","amount":-1330,"comment":"Bought 10 units at 1.23€ each with additional cost of 1€","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}}]
					}
				},
				{
					"name": "post of valuation with account_id, cost and lower amount returns 200",
					"endpoint": "/api/v1/assets/1/valuations",
					"method": "POST",
					"body": {
						"value_per_unit": 123,
						"amount": 10,
						"timestamp": "2023-03-22T11:22:00Z",
						"account_id": 0,
						"cost": 100
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "transaction gets correctly created",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [
							{"id":0,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-20T11:22:00Z","amount":-1230,"comment":"Bought 10 units at 1.23€ each","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}},
							{"id":1,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-21T11:22:00Z","amount":-1330,"comment":"Bought 10 units at 1.23€ each with additional cost of 1€","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}},
							{"id":2,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-22T11:22:00Z","amount":2360,"comment":"Sold 20 units at 1.23€ each with additional cost of 1€","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}}
						]
					}
				},
				{
					"name": "post of valuation with account_id, cost and amount_change returns 200",
					"endpoint": "/api/v1/assets/1/valuations",
					"method": "POST",
					"body": {
						"value_per_unit": 123,
						"amount_change": 10,
						"timestamp": "2023-03-23T11:22:00Z",
						"account_id": 0,
						"cost": 100
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "transaction gets correctly created",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [
							{"id":0,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-20T11:22:00Z","amount":-1230,"comment":"Bought 10 units at 1.23€ each","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}},
							{"id":1,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-21T11:22:00Z","amount":-1330,"comment":"Bought 10 units at 1.23€ each with additional cost of 1€","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}},
							{"id":2,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-22T11:22:00Z","amount":2360,"comment":"Sold 20 units at 1.23€ each with additional cost of 1€","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}},
							{"id":3,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-23T11:22:00Z","amount":-1330,"comment":"Bought 10 units at 1.23€ each with additional cost of 1€","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}}
						]
					}
				},
				{
					"name": "post of valuation with account_id, cost and negative amount_change returns 200",
					"endpoint": "/api/v1/assets/1/valuations",
					"method": "POST",
					"body": {
						"value_per_unit": 123,
						"amount_change": -10,
						"timestamp": "2023-03-24T11:22:00Z",
						"account_id": 0,
						"cost": 100
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "transaction gets correctly created",
					"endpoint": "/api/v1/transactions/all",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [
							{"id":0,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-20T11:22:00Z","amount":-1230,"comment":"Bought 10 units at 1.23€ each","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}},
							{"id":1,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-21T11:22:00Z","amount":-1330,"comment":"Bought 10 units at 1.23€ each with additional cost of 1€","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}},
							{"id":2,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-22T11:22:00Z","amount":2360,"comment":"Sold 20 units at 1.23€ each with additional cost of 1€","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}},
							{"id":3,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-23T11:22:00Z","amount":-1330,"comment":"Bought 10 units at 1.23€ each with additional cost of 1€","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}},
							{"id":4,"user_id":0,"currency_id":0,"account_id":0,"recipient_id":0,"status":1,"timestamp":"2023-03-24T11:22:00Z","amount":1130,"comment":"Sold 10 units at 1.23€ each with additional cost of 1€","tag_ids":[],"asset":{"id":1,"user_id":0,"name":"test2","description":"description","currency_id":0,"value_per_unit":null,"amount":null,"tag_ids":null}}
						]
					}
				},
				{
					"name": "valuation got correctly saved",
					"endpoint": "/api/v1/assets/1/valuation_history",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [
							{"value_per_unit":123,"amount":10.0,"timestamp":"2023-03-18T11:22:00Z"},
							{"value_per_unit":123,"amount":10.0,"timestamp":"2023-03-19T11:22:00Z"},
							{"value_per_unit":123,"amount":20.0,"timestamp":"2023-03-20T11:22:00Z"},
							{"value_per_unit":123,"amount":30.0,"timestamp":"2023-03-21T11:22:00Z"},
							{"value_per_unit":123,"amount":10.0,"timestamp":"2023-03-22T11:22:00Z"},
							{"value_per_unit":123,"amount":20.0,"timestamp":"2023-03-23T11:22:00Z"},
							{"value_per_unit":123,"amount":10.0,"timestamp":"2023-03-24T11:22:00Z"}
						]
					}
				},
				{
					"name": "replacing asset valuation history returns 200",
					"endpoint": "/api/v1/assets/1/valuation_history",
					"method": "POST",
					"body": [
						{"value_per_unit":123,"amount":20.0,"timestamp":"2023-03-20T12:22:00Z"},
						{"value_per_unit":125,"amount":-30.0,"timestamp":"2023-03-21T13:22:00Z"},
						{"value_per_unit":123,"amount":10.0,"timestamp":"2023-03-22T14:22:00Z"}
					],
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "valuation got correctly overwritten",
					"endpoint": "/api/v1/assets/1/valuation_history",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [
							{"value_per_unit":123,"amount":20.0,"timestamp":"2023-03-20T12:22:00Z"},
							{"value_per_unit":125,"amount":-30.0,"timestamp":"2023-03-21T13:22:00Z"},
							{"value_per_unit":123,"amount":10.0,"timestamp":"2023-03-22T14:22:00Z"}
						]
					}
				}
			]
		},
		{
			"name": "dashboard",
			"defaults": {
				"cookies": {
					"accessToken": "$login_as_admin.accessToken"
				},
				"before": [
					"login_as_admin"
				]
			},
			"tests": [
				{
					"name": "getting own dashboards returns default dashboard on default db",
					"endpoint": "/api/v1/users/me/dashboards",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": [{"id":0,"user_id":0,"name":"Default","description":"The default Dashboard"}]
					}
				}
			]
		},
		{
			"name": "charts",
			"defaults": {
				"cookies": {
					"accessToken": "$login_as_admin.accessToken"
				},
				"before": [
					"login_as_admin"
				]
			},
			"tests": [
				{
					"name": "adding text chart using foreach_currency returns 200",
					"endpoint": "/api/v1/charts",
					"method": "POST",
					"body": {
						"grid_size": "small",
						"chart_type": "text",
						"title": "Current Balance",
						"text_template": "%foreach_currency{$name: $current_balance$symbol*}%"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "text chart using foreach_currency got created correctly",
					"endpoint": "/api/v1/charts/0",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":0,"user_id":0,"grid_size":"small","chart_type":"text","title":"Current Balance","text_template":"%foreach_currency{$name: $current_balance$symbol*}%","filter_from":null,"filter_to":null,"filter_collection":null}
					}
				},
				{
					"name": "adding pie chart using filter_collection recipients returns 200",
					"endpoint": "/api/v1/charts",
					"method": "POST",
					"body": {
						"grid_size": "medium",
						"chart_type": "pie",
						"title": "Spending per recipient in date range",
						"filter_collection": "recipients"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "pie chart using filter_collection recipients got created correctly",
					"endpoint": "/api/v1/charts/1",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":1,"user_id":0,"grid_size":"medium","chart_type":"pie","title":"Spending per recipient in date range","text_template":null,"filter_from":null,"filter_to":null,"filter_collection":"recipients"}
					}
				},
				{
					"name": "adding pie chart using filter_collection tags returns 200",
					"endpoint": "/api/v1/charts",
					"method": "POST",
					"body": {
						"grid_size": "medium",
						"chart_type": "pie",
						"title": "Spending per tag in date range",
						"filter_collection": "tags"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "pie chart using filter_collection tags got created correctly",
					"endpoint": "/api/v1/charts/2",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":2,"user_id":0,"grid_size":"medium","chart_type":"pie","title":"Spending per tag in date range","text_template":null,"filter_from":null,"filter_to":null,"filter_collection":"tags"}
					}
				},
				{
					"name": "adding line chart using filter_collection recipients returns 200",
					"endpoint": "/api/v1/charts",
					"method": "POST",
					"body": {
						"grid_size": "large",
						"chart_type": "line",
						"title": "Spending per recipient over time",
						"filter_collection": "recipients"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "line chart using filter_collection recipients got created correctly",
					"endpoint": "/api/v1/charts/3",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":3,"user_id":0,"grid_size":"large","chart_type":"line","title":"Spending per recipient over time","text_template":null,"filter_from":null,"filter_to":null,"filter_collection":"recipients"}
					}
				},
				{
					"name": "adding line chart using filter_collection accounts returns 200",
					"endpoint": "/api/v1/charts",
					"method": "POST",
					"body": {
						"grid_size": "large",
						"chart_type": "line",
						"title": "Spending per account over time",
						"filter_collection": "accounts"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "line chart using filter_collection accounts got created correctly",
					"endpoint": "/api/v1/charts/4",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":4,"user_id":0,"grid_size":"large","chart_type":"line","title":"Spending per account over time","text_template":null,"filter_from":null,"filter_to":null,"filter_collection":"accounts"}
					}
				},
				{
					"name": "adding line chart using filter_collection currencies returns 200",
					"endpoint": "/api/v1/charts",
					"method": "POST",
					"body": {
						"grid_size": "large",
						"chart_type": "line",
						"title": "Spending per currency over time",
						"filter_collection": "currencies"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "line chart using filter_collection currencies got created correctly",
					"endpoint": "/api/v1/charts/5",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"id":5,"user_id":0,"grid_size":"large","chart_type":"line","title":"Spending per currency over time","text_template":null,"filter_from":null,"filter_to":null,"filter_collection":"currencies"}
					}
				},
				{
					"name": "post of new tag returns 200",
					"endpoint": "/api/v1/tags",
					"method": "POST",
					"body": {
						"name": "tag1"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of second new tag returns 200",
					"endpoint": "/api/v1/tags",
					"method": "POST",
					"body": {
						"name": "tag2"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new recipient returns 200",
					"endpoint": "/api/v1/recipients",
					"method": "POST",
					"body": {
						"name": "test"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new account with Euro Currency returns 200",
					"endpoint": "/api/v1/accounts",
					"method": "POST",
					"body": {
						"name": "euro",
						"default_currency_id": 0
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new account with USD Currency returns 200",
					"endpoint": "/api/v1/accounts",
					"method": "POST",
					"body": {
						"name": "USD",
						"default_currency_id": 1
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new transaction in account 0 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 0,
						"recipient_id": 0,
						"status": 1,
						"tag_ids": [0],
						"timestamp": "2023-03-25T11:22:00.000Z",
						"amount": 12345,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new transaction in account 1 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 1,
						"recipient_id": 1,
						"status": 1,
						"tag_ids": [0,1],
						"timestamp": "2023-03-25T11:22:00.000Z",
						"amount": -45,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new transaction in account 2 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 2,
						"recipient_id": 1,
						"status": 1,
						"tag_ids": [1],
						"timestamp": "2023-03-25T11:22:00.000Z",
						"amount": 1000,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "retrieval of text chart using foreach_currency returns correct output",
					"endpoint": "/api/v1/charts/0/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":"Euro: 123€\nUSD: 10$\n","pie":null,"line":null}
					}
				},
				{
					"name": "retrieval of pie chart using filter_collection recipients returns correct output",
					"endpoint": "/api/v1/charts/1/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":{"Default":["123.45€ ",123.45],"test":["-0.45€ 10$ ",9.55]},"line":null}
					}
				},
				{
					"name": "retrieval of pie chart using filter_collection tags returns correct output",
					"endpoint": "/api/v1/charts/2/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":{"tag1":["123€ ",123],"tag2":["-0.45€ 10$ ",9.55]},"line":null}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection recipients returns correct output",
					"endpoint": "/api/v1/charts/3/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{"Default":[{"timestamp":"2023-03-25T00:00:00Z","value":123.45,"label":"123.45€ "}],"test":[{"timestamp":"2023-03-25T00:00:00Z","value":9.55,"label":"-0.45€ 10$ "}]}}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection accounts returns correct output",
					"endpoint": "/api/v1/charts/4/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{"Default":[{"timestamp":"2023-03-25T00:00:00Z","value":123.45,"label":"123.45€ "}],"USD":[{"timestamp":"2023-03-25T00:00:00Z","value":10.0,"label":"10$ "}],"euro":[{"timestamp":"2023-03-25T00:00:00Z","value":-0.45,"label":"-0.45€ "}]}}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection currencies returns correct output",
					"endpoint": "/api/v1/charts/5/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{"Euro":[{"timestamp":"2023-03-25T00:00:00Z","value":123.0,"label":"123€ "}],"USD":[{"timestamp":"2023-03-25T00:00:00Z","value":10.0,"label":"10$ "}]}}
					}
				},
				{
					"name": "post of new transaction in the past in account 0 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 0,
						"recipient_id": 0,
						"status": 1,
						"tag_ids": [0],
						"timestamp": "1923-03-25T11:22:00.000Z",
						"amount": 100,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new transaction in the past in account 1 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 1,
						"recipient_id": 1,
						"status": 1,
						"tag_ids": [0,1],
						"timestamp": "1923-03-25T11:22:00.000Z",
						"amount": 200,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new transaction in the past in account 2 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 2,
						"recipient_id": 1,
						"status": 1,
						"tag_ids": [1],
						"timestamp": "1923-03-25T11:22:00.000Z",
						"amount": 300,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new transaction in the future in account 0 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 0,
						"recipient_id": 0,
						"status": 1,
						"tag_ids": [0],
						"timestamp": "2123-03-25T11:22:00.000Z",
						"amount": 100,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new transaction in the future in account 1 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 1,
						"recipient_id": 1,
						"status": 1,
						"tag_ids": [0,1],
						"timestamp": "2123-03-25T11:22:00.000Z",
						"amount": 200,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new transaction in the future in account 2 returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 2,
						"recipient_id": 1,
						"status": 1,
						"tag_ids": [1],
						"timestamp": "2123-03-25T11:22:00.000Z",
						"amount": 300,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "retrieval of text chart using foreach_currency returns correct output with more transactions",
					"endpoint": "/api/v1/charts/0/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":"Euro: 129€\nUSD: 16$\n","pie":null,"line":null}
					}
				},
				{
					"name": "retrieval of pie chart using filter_collection recipients returns correct output with more transactions",
					"endpoint": "/api/v1/charts/1/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":{"Default":["125.45€ ",125.45],"test":["3.55€ 16$ ",19.55]},"line":null}
					}
				},
				{
					"name": "retrieval of pie chart using filter_collection tags returns correct output with more transactions",
					"endpoint": "/api/v1/charts/2/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":{"tag1":["129€ ",129],"tag2":["3.55€ 16$ ",19.55]},"line":null}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection recipients returns correct output with more transactions",
					"endpoint": "/api/v1/charts/3/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{
							"Default":[
								{"timestamp":"1923-03-25T00:00:00Z","value":1.0,"label":"1€ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":124.45,"label":"124.45€ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":125.45,"label":"125.45€ "}
							],
							"test":[
								{"timestamp":"1923-03-25T00:00:00Z","value":5.0,"label":"2€ 3$ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":14.55,"label":"1.55€ 13$ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":19.55,"label":"3.55€ 16$ "}
							]
						}}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection accounts returns correct output with more transactions",
					"endpoint": "/api/v1/charts/4/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{
							"Default":[
								{"timestamp":"1923-03-25T00:00:00Z","value":1.0,"label":"1€ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":124.45,"label":"124.45€ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":125.45,"label":"125.45€ "}
							],
							"USD":[
								{"timestamp":"1923-03-25T00:00:00Z","value":3.0,"label":"3$ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":13.0,"label":"13$ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":16.0,"label":"16$ "}
							],
							"euro":[
								{"timestamp":"1923-03-25T00:00:00Z","value":2.0,"label":"2€ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":1.55,"label":"1.55€ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":3.55,"label":"3.55€ "}
							]
						}}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection currencies returns correct output with more transactions",
					"endpoint": "/api/v1/charts/5/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{
							"Euro":[
								{"timestamp":"1923-03-25T00:00:00Z","value":3.0,"label":"3€ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":126.0,"label":"126€ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":129.0,"label":"129€ "}
							],
							"USD":[
								{"timestamp":"1923-03-25T00:00:00Z","value":3.0,"label":"3$ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":13.0,"label":"13$ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":16.0,"label":"16$ "}
							]
						}}
					}
				},
				{
					"name": "retrieval of pie chart using filter_collection recipients within date range returns correct output",
					"endpoint": "/api/v1/charts/1/data?from_date=2022-05-01T15:16:01.900Z&to_date=2024-05-01T15:16:01.900Z",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":{"Default":["123.45€ ",123.45],"test":["-0.45€ 10$ ",9.55]},"line":null}
					}
				},
				{
					"name": "retrieval of pie chart using filter_collection tags within date range returns correct output",
					"endpoint": "/api/v1/charts/2/data?from_date=2022-05-01T15:16:01.900Z&to_date=2024-05-01T15:16:01.900Z",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":{"tag1":["123€ ",123],"tag2":["-0.45€ 10$ ",9.55]},"line":null}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection recipients within date range returns correct output",
					"endpoint": "/api/v1/charts/3/data?from_date=2022-05-01T15:16:01.900Z&to_date=2024-05-01T15:16:01.900Z",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{"Default":[{"timestamp":"2023-03-25T00:00:00Z","value":123.45,"label":"123.45€ "}],"test":[{"timestamp":"2023-03-25T00:00:00Z","value":9.55,"label":"-0.45€ 10$ "}]}}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection accounts within date range returns correct output",
					"endpoint": "/api/v1/charts/4/data?from_date=2022-05-01T15:16:01.900Z&to_date=2024-05-01T15:16:01.900Z",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{"Default":[{"timestamp":"2023-03-25T00:00:00Z","value":123.45,"label":"123.45€ "}],"USD":[{"timestamp":"2023-03-25T00:00:00Z","value":10.0,"label":"10$ "}],"euro":[{"timestamp":"2023-03-25T00:00:00Z","value":-0.45,"label":"-0.45€ "}]}}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection currencies within date range returns correct output",
					"endpoint": "/api/v1/charts/5/data?from_date=2022-05-01T15:16:01.900Z&to_date=2024-05-01T15:16:01.900Z",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{"Euro":[{"timestamp":"2023-03-25T00:00:00Z","value":123.0,"label":"123€ "}],"USD":[{"timestamp":"2023-03-25T00:00:00Z","value":10.0,"label":"10$ "}]}}
					}
				},
				{
					"name": "post of new transaction in account 0 on same day returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 0,
						"recipient_id": 0,
						"status": 1,
						"tag_ids": [0],
						"timestamp": "2023-03-25T12:22:00.000Z",
						"amount": 12345,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new transaction in account 1 on same day returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 1,
						"recipient_id": 1,
						"status": 1,
						"tag_ids": [0,1],
						"timestamp": "2023-03-25T12:22:00.000Z",
						"amount": -45,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "post of new transaction in account 2 on same day returns 200",
					"endpoint": "/api/v1/transactions",
					"method": "POST",
					"body": {
						"account_id": 2,
						"recipient_id": 1,
						"status": 1,
						"tag_ids": [1],
						"timestamp": "2023-03-25T12:22:00.000Z",
						"amount": 1000,
						"comment": "this is a comment"
					},
					"expected_outcome": {
						"status_code_equals": 200
					}
				},
				{
					"name": "retrieval of text chart using foreach_currency with multiple transactions on one day returns correct output",
					"endpoint": "/api/v1/charts/0/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":"Euro: 252€\nUSD: 26$\n","pie":null,"line":null}
					}
				},
				{
					"name": "retrieval of pie chart using filter_collection recipients with multiple transactions on one day returns correct output",
					"endpoint": "/api/v1/charts/1/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":{"Default":["248.9€ ",248.9],"test":["3.1€ 26$ ",29.1]},"line":null}
					}
				},
				{
					"name": "retrieval of pie chart using filter_collection tags with multiple transactions on one day returns correct output",
					"endpoint": "/api/v1/charts/2/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":{"tag1":["252€ ",252],"tag2":["3.1€ 26$ ",29.1]},"line":null}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection recipients with multiple transactions on one day returns correct output",
					"endpoint": "/api/v1/charts/3/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{
							"Default":[
								{"timestamp":"1923-03-25T00:00:00Z","value":1.0,"label":"1€ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":247.9,"label":"247.9€ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":248.9,"label":"248.9€ "}
							],
							"test":[
								{"timestamp":"1923-03-25T00:00:00Z","value":5.0,"label":"2€ 3$ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":24.10,"label":"1.1€ 23$ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":29.10,"label":"3.1€ 26$ "}
							]
						}}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection accounts with multiple transactions on one day returns correct output",
					"endpoint": "/api/v1/charts/4/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{
							"Default":[
								{"timestamp":"1923-03-25T00:00:00Z","value":1.0,"label":"1€ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":247.9,"label":"247.9€ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":248.9,"label":"248.9€ "}
							],
							"USD":[
								{"timestamp":"1923-03-25T00:00:00Z","value":3.0,"label":"3$ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":23.0,"label":"23$ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":26.0,"label":"26$ "}
							],
							"euro":[
								{"timestamp":"1923-03-25T00:00:00Z","value":2.0,"label":"2€ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":1.10,"label":"1.1€ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":3.10,"label":"3.1€ "}
							]
						}}
					}
				},
				{
					"name": "retrieval of line chart using filter_collection currencies with multiple transactions on one day returns correct output",
					"endpoint": "/api/v1/charts/5/data",
					"method": "GET",
					"expected_outcome": {
						"status_code_equals": 200,
						"body_equals": {"text":null,"pie":null,"line":{
							"Euro":[
								{"timestamp":"1923-03-25T00:00:00Z","value":3.0,"label":"3€ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":249.0,"label":"249€ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":252.0,"label":"252€ "}
							],
							"USD":[
								{"timestamp":"1923-03-25T00:00:00Z","value":3.0,"label":"3$ "},
								{"timestamp":"2023-03-25T00:00:00Z","value":23.0,"label":"23$ "},
								{"timestamp":"2123-03-25T00:00:00Z","value":26.0,"label":"26$ "}
							]
						}}
					}
				}
			]
		}
	]
}